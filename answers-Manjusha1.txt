1)What is Thread?

A thread, is the path followed when executing a program. All Java programs have at least one thread, known as the main thread, which is created by the Java Virtual Machine (JVM) at the program’s start, when the main() method is invoked with the main thread.

creating a thread is accomplished by implementing an interface and extending a class. Every Java thread is created and controlled by the java.lang.Thread class.


2)What is Multi Threading?

multithreading is the concept of executeing a complex process by running a collection of threads simultaneously. Each thread belongs to the Java. lang. Thread class. The thread class overrides the run() method and executes the process.


3)Explain the differences between overloading and overriding?
 When two or more methods in the same class have the same name but different parameters, it's called Overloading. When the method signature (name and parameters) are the same in the superclass and the child class, it's called Overriding.

4)Explain basic Git commands
git init:

This command is used to start a new repository.

git clone 'url':

This command is used to obtain a repository from an existing URL.

git add "filename":

This command adds a file to the staging area.

git add .:

This command adds one or more to the staging area

git commit -m “[ Type in the commit message]”:

This command records or snapshots the file permanently in the version history.

git push:

This command sends the committed changes of master branch to your remote repository.

git pull:

This command fetches and merges changes on the remote server to your working directory.

5)Explain the signifance of This , final, static, super keywords?

This Keyword:
this is used to refer current-class’s instance as well as static members.
this can be used in various contexts as given below:
to refer instance variable of current class
to invoke or initiate current class constructor
can be passed as an argument in the method call
can be passed as argument in the constructor call
can be used to return the current class instance

Static Keyword:
reason why static keywords are heavily used in Java is to efficiently manage memory. Generally, if you want to access variables or methods inside a class, you first need to create an instance or object of that class. However, there might be situations where you want to access only a couple of methods or variables of a class and you don’t want to create a new instance for that class just for accessing these members. This is where you can use the static keyword in Java.

Final keyword:

Final is a keyword in Java that is used to restrict the user and can be used in many respects. Final can be used with:
Class:When a class is declared as final, it cannot be extended further.
Methods:A method declared as final cannot be overridden; this means even when a child class can call the final method of parent class without any issues, but the overriding will not be possible. 
Variables:Once a variable is assigned with the keyword final, it always contains the same exact value. Again things may happen like this; if a final variable holds a reference to an object then the state of the object can be altered if programmers perform certain operations on those objects, but the variable will always refer to the same object. A final variable that is not initialized at the time of declaration is known as a blank final variable. If you are declaring a final variable in a constructor, then you must initialize the blank final variable within the constructor of the class. Otherwise, the program might show a compilation error.

Super keyword:
super is used to refer super-class’s instance as well as static members.
super is also used to invoke super-class’s method or constructor.

6)Explain Boundry value analysis
Boundary testing is the process of testing between extreme ends or boundaries between partitions of the input values.

So these extreme ends like Start- End, Lower- Upper, Maximum-Minimum, Just Inside-Just Outside values are called boundary values and the testing is called “boundary testing”.
The basic idea in normal boundary value testing is to select input variable values at their:
Minimum
Just above the minimum
A nominal value
Just below the maximum
Maximum


7)Explain Scrum meetings:

1. Sprint Planning
An agile ceremony held by the Development team, Scrum Master, and Product Owner. It is held at the beginning of a new sprint, with the purpose of setting up prioritized worklist and aligning the entire team for success throughout the sprint. The Product Owner will discuss a prioritized backlog with the development team, and the whole group collectively comes up with the amount of effort involved. The team then decides how much of the work from the backlog can be completed in this iteration. By following the Best Sprint planning practices, sprint session span can be kept within 4-6 hours.

Before the meeting, Product owner explains the user stories and all of the use cases to everyone. The Team now has the opportunity to ask questions about them and get rid of any confusion and get clarifications.

The team now starts effort estimation using the method of planning poker. Once effort estimation is done, user stories are assigned to individual team members and work is started.

After the meeting, team members can still add new user story or task, if they find something within a sprint. Team members should communicate to product owner if newly found work does not seem to be original part of the plan.

2. Daily Scrum or Stand-up
An essential sync up meeting in both Scrum and Kanban methodologies. It is an agile ceremony held for the Development Team facilitated by the Scrum Master. The Product Owner and the stakeholders can participate in this meeting to answer the questions raised by the development team. This meeting takes place each day preferably at the same place, and typically held in the morning. The purpose of the Stand-up is to keep everyone on the same page.

Each team member is being required to answer 3 questions:

What did I do yesterday?
What will I do today?
Are there any impediments to continue working?
The daily stand-up should be considered an informal meeting and should be no longer than 15 minutes. For details, see Guide to effectively run daily scrum.

3. Sprint/Iteration Review
An agile ceremony held by Development Team, Scrum Master and Product Owner, where the stakeholders may be invited as well. The purpose of the Iteration Review is to show the work that the team has achieved in the last sprint. The format of the meetings can be casual or formal depending on the team’s preferences. Scrum Master need to plan this session well beforehand to make sure participation of stakeholders who can give necessary feedback on sprint demo. After giving demos of work progress, the team can expect to receive feedback from the stakeholders. Sprint Review session usually takes 1-2 hours.

4. Sprint Retrospective
An agile ceremony held after Sprint Review meeting and usually takes an hour. Participants are Scrum Master, Product Owner, and Development Team. The aim of the meeting is to find out what worked well and what didn’t, in the last iteration. The team tries to find out any issue that is affecting the progress. All participants give written feedback. The team takes this session as an opportunity to improve. If there are different types of issues then the team picks the three most voted issues and discuss them to find their solution together.

It is to reflect upon the recent iteration to evaluate, how the team performed and what factors caused it to lose productivity. After retrospective analysis, the team can expect to improve its processes and be on the path of growth for the future. For details, check recommended retrospective practices and what to avoid?

5.Sprint Grooming:

Grooming (or refinement) is a meeting of the Scrum team in which the product backlog items are discussed and the next sprint planning is prepared.

Product grooming is critical in product management because it means keeping the backlog up to date and getting backlog items ready for upcoming sprints.

8)Throw and throws

Both throw and throws are concepts of exception handling in Java. The throws keyword is used to declare which exceptions can be thrown from a method, while the throw keyword is used to explicitly throw an exception within a method or block of code.





